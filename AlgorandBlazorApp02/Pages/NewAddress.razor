@page "/NewAddress"
<h1>Create a new ALGORAND address</h1>
<hr />
<br />
<br />
<div style="width:100%" class=" border-dark">Node Address: <input width="500" class="alert" placeholder=" http://hackathon.algodev.network:9100" @bind="algo_address" /></div>
<div  style="width:100%" class=" border-dark">API Token: <input width="500" class="alert" placeholder="ef920e2e7e002953f4b29a8af720efe8e4ecc75ff102b165e0472834b25832c1" @bind="algo_api_token" /></div>
<button class="btn btn-outline-dark" @onclick="newAddress">Create New Address</button>

<br />
<br />

<table class="table">
    <tr>
        <td width="25%">New Address: </td>
        <td width="75%"><a href="https://testnet.algoexplorer.io/address/@newAddressString" target="_blank">@newAddressString</a> </td>
    </tr>
    <tr>
        <td>Your Secret Phares: </td>
        <td>@newAddressPhrase</td>
    </tr>
</table>
<div class="alert-danger">@algoStatusMsg</div>

@code {

    private string newAddressString { get; set; }
    private string newAddressPhrase { get; set; }

    private string algoStatusMsg { get; set; }

    //initialte communication
    static string algo_address { get; set; } = "http://hackathon.algodev.network:9100";
    static string algo_api_token { get; set; } = "ef920e2e7e002953f4b29a8af720efe8e4ecc75ff102b165e0472834b25832c1";

    private void newAddress()
    {
        try
        {
            Algorand.Algod.Client.Api.AlgodApi algodApiInstance = new Algorand.Algod.Client.Api.AlgodApi(algo_address, algo_api_token);

            Algorand.Account newAccount = new Algorand.Account();

            newAddressPhrase = newAccount.ToMnemonic();
            newAddressString = newAccount.Address.ToString();
            algoStatusMsg = "Address Created!";
        }
        catch { algoStatusMsg = "Error Creating New Address"; }
    }
}